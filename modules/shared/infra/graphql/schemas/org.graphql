type Org implements Node {
  id: ID!
  name: String
  email: String
  description: String
  address: Address
  phoneNumber: String
  homePage: String
  avatarUrl: String
  heroImageUrl: String
  members: MemberConnection
  inquiries: InquiryConnection
}

type Address {
  address: String!
  latitude: Float!
  longitude: Float!
}

type MemberConnection {
  edges: [MemberEdges!]
  pageInfo: PageInfo
}

type MemberEdges {
  cursor: String!
  node: User!
  isAdmin: Boolean
}

type InquiryConnection {
  edges: [InquiryEdges!]
  pageInfo: PageInfo
}

type InquiryEdges {
  cursor: String!
  node: Inquiry!
}

type Inquiry implements Node {
  id: ID!
  content: String
  sender: User
  replier: User
  receivedOrg: Org
  sentAt: String
  category: InquiryCategory
  inquiryStatus: InquiryStatus
}

"""
APPLICATION | CONTACT | COUNSEL | INQUIRY | OTHERS
"""
scalar InquiryCategory

"""
DONE | DRAFT | UNREAD | WORKING
"""
scalar InquiryStatus

type InquiryTree implements Node {
  id: ID!
  leaves: InquiryLeafConnection
}

type InquiryLeafConnection {
  edges: [InquiryLeafEdges]!
  pageInfo: PageInfo
}

type InquiryLeafEdges {
  cursor: String!
  node: Inquiry!
  isRoot: Boolean
}

type Query {
  getOrg(id: String!): OrgResult
  getOrgs: OrgsResult
  getOrgInfoByMemberCookieAndId(orgId: String!): OrgResult
  getInquiry(inquiryId: String!): InquiryResult
  getInquiriesByOrgId(orgId: String!): InquiriesResult
  getInquiriesByTreeId(treeId: String!): InquiryTreeResult
}

type Mutation {
  acceptJoinOrg(input: acceptJoinOrgInput!): OrgResult
  registerOrg(input: RegisterOrgInput!): OrgResult
  updateOrg(input: UpdateOrgInput!): OrgResult
  requestJoinOrg(orgId: String!): OrgResult
  replyInquiry(input: replyInquiryInput!): InquiryResult
  sendInquiry(input: SendInquiryInput!): InquiryResult
  updateInquiryStatus(input: UpdateInquiryStatusInput!): InquiryResult
}

union OrgResult = Org | Errors
union OrgsResult = Orgs | Errors
union InquiryResult = Inquiry | Errors
union InquiriesResult = InquiryConnection | Errors
union InquiryTreeResult = InquiryTree | Errors

type Orgs {
  orgs: [Org!]
}

input UpdateOrgInput {
  orgId: ID!
  name: String
  email: String
  address: String
  phoneNumber: String
  description: String
  homePage: String
}

input RegisterOrgInput {
  name: String!
  email: String!
  address: String!
  phoneNumber: String!
}

input SendInquiryInput {
  orgId: ID!
  category: InquiryCategory!
  content: String!
}

input UpdateInquiryStatusInput {
  inquiryId: ID!
  inquiryStatus: InquiryStatus!
}

input acceptJoinOrgInput {
  requestUserId: String!
  requestedOrgId: String!
}

input replyInquiryInput {
  replyTargetId: String!
  content: String!
}
