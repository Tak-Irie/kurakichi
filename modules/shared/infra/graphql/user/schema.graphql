type User implements Node {
  id: ID!
  name: String!
  email: String!
  avatar: String
  selfIntro: String
  heroImage: String
  belongOrgs: [Org!]
  belongBases: [Base!]
  messages: [Message!]
  role: UserRole
}

type Base implements Node {
  id: ID!
}

type Message implements Node {
  id: ID!
}

type Base implements Node {
  id: ID!
}

enum UserRole {
  VISITOR
  EXPERT
}

type Query {
  user(id: ID!): User
  users: [User!]
}

type Mutation {
  registerUser(input: registerUserInput!): RegisterUserPayload!
}

input registerUserInput {
  email: String!
  password: String!
}

type RegisterUserPayload {
  user: User!
}
